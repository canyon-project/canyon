# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  username: String!
  password: String!
  nickname: String!
  avatar: String!
  refreshToken: String!
  accessToken: String!
  email: String!
  favor: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Tag {
  id: String!
  name: String!
  link: String!
  color: String!
}

type Member {
  userID: String!
  role: String!
}

type Project {
  id: ID!
  name: String!
  pathWithNamespace: String!
  description: String!
  coverage: String!
  language: String!
  tags: [Tag!]!
  members: [Member!]!
  bu: String!
  branchOptions: [String!]!
  maxCoverage: Float!
  defaultBranch: String!
  instrumentCwd: String!
  reportTimes: Float!
  lastReportTime: DateTime!
  favored: Boolean!
  createdAt: DateTime!
}

type BuOption {
  bu: String!
  count: Float!
}

type TagOption {
  name: String!
}

type ProjectPagesModel {
  data: [Project!]!
  total: Float!
}

type ProjectChartDataModel {
  """整体覆盖率"""
  statements: Float!

  """New Lines"""
  newlines: Float!

  """sha"""
  sha: String!
}

type Log {
  """ID"""
  id: String!

  """Commit Sha"""
  commitSha: String!

  """上报ID"""
  reportID: String!

  """关系ID"""
  relationID: String!

  """创建时间"""
  createdAt: DateTime!

  """上报人"""
  reporterUsername: String!

  """上报人头像"""
  reporterAvatar: String!

  """新增"""
  newlines: Float!

  """全量"""
  statements: Float!
}

type ProjectRecordsModel {
  """commit信息"""
  message: String!

  """commit sha"""
  sha: String!

  """Compare Target"""
  compareTarget: String!

  """branch"""
  branch: String!

  """buildURL"""
  buildURL: String!

  """buildID"""
  buildID: String!

  """buildProvider"""
  buildProvider: String!

  """Compare Url"""
  compareUrl: String!

  """web url"""
  webUrl: String!

  """新增"""
  newlines: Float!

  """全量"""
  statements: Float!

  """分支覆盖率"""
  branches: Float!

  """函数覆盖率"""
  functions: Float!

  """行覆盖率"""
  lines: Float!

  """最近一次上报"""
  lastReportTime: DateTime!

  """上报次数"""
  times: Float!

  """上报日志"""
  logs: [Log!]!
}

type ProjectRecordsPagesModel {
  data: [ProjectRecordsModel!]!
  total: Float!
}

type ProjectCompartmentDataModel {
  """label"""
  label: String!

  """value"""
  value: String!
}

type ProjectRecordDetailModel {
  """ID"""
  id: String!

  """Commit Sha"""
  sha: String!

  """上报ID"""
  reportID: String!

  """关系ID"""
  relationID: String!

  """创建时间"""
  createdAt: DateTime!

  """最近一次上报时间"""
  lastReportTime: DateTime!

  """上报人"""
  reporterUsername: String!

  """上报人头像"""
  reporterAvatar: String!

  """新增"""
  newlines: Float!

  """全量"""
  statements: Float!
}

type DeleModel {
  """删除数量"""
  count: Float!
}

type Project2 {
  id: ID!
  name: String!
  pathWithNamespace: String!
  description: String!
}

type Query {
  """提供执行此查询的用户的详细信息（通过授权 Bearer 标头）"""
  me: User!

  """列出所有用户"""
  listUser: [User!]!

  """获取Project"""
  getProjects(
    keyword: String!
    lang: [String!]!
    bu: [String!]!
    tag: String!

    """当前页码"""
    current: Int!

    """每页数量"""
    pageSize: Int!

    """排序字段名称"""
    field: String!

    """升序或降序"""
    order: String!
    favorOnly: Boolean!
  ): ProjectPagesModel!

  """获取Projects部门选项"""
  getProjectsBuOptions: [BuOption!]!

  """获取Projects标签选项"""
  getProjectsTagOptions: [TagOption!]!

  """获取Project图表"""
  getProjectChartData(projectID: String!, branch: String!): [ProjectChartDataModel!]!

  """获取Project宫格"""
  getProjectCompartmentData(projectID: String!): [ProjectCompartmentDataModel!]!

  """获取Project记录"""
  getProjectRecords(projectID: String!, current: Int!, pageSize: Int!, keyword: String!, onlyDefault: Boolean): ProjectRecordsPagesModel!
  getProjectByID(projectID: ID!): Project!

  """获取Project记录的详细通过sha"""
  getProjectRecordDetailBySha(projectID: ID!, sha: String!): [ProjectRecordDetailModel!]!
}

type Mutation {
  """关注项目"""
  favorProject(projectID: ID!, favored: Boolean!): User!

  """检查输入的gitlab链接"""
  checkProjectUrl(projectUrl: String!): Project2!

  """创建项目"""
  createProject(projectID: String!, language: String!): Project2!

  """删除项目"""
  deleteProject(projectID: String!): Project2!

  """更新项目"""
  updateProject(
    """Project ID"""
    projectID: ID!
    description: String
    instrumentCwd: String
    coverage: String
    defaultBranch: String
    tags: [TagInput!]
    members: [MemberInput!]
  ): Project2!

  """删除sha记录"""
  deleteProjectRecord(projectID: ID!, sha: String!): DeleModel!
}

input TagInput {
  id: String!
  name: String!
  link: String!
  color: String!
}

input MemberInput {
  userID: String!
  role: String!
}