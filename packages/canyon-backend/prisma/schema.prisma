datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

model SysSetting {
  id    String @id @default(cuid())
  key   String
  value String

  @@map("sys_setting")
}

model User {
  id           Int      @id
  username     String
  password     String
  nickname     String
  avatar       String
  refreshToken String   @map("refresh_token")
  accessToken  String   @map("access_token")
  email        String
  favor        String
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("user")
}

model GitProvider {
  id           String  @id
  url          String
  type         String
  name         String
  disabled     Boolean
  privateToken String  @map("private_token")

  @@map("git_provider")
}

model Coverage {
  id                String   @id @default(cuid())
  sha               String   @map("sha")
  branch            String
  compareTarget     String   @map("compare_target")
  provider          String
  buildProvider     String   @map("build_provider") // 通过侦测CI环境变量来判断
  buildID           String   @map("build_id")
  projectID         String   @map("project_id")
  reporter          String
  reportID          String   @map("report_id") // 未来聚合的一句，区分case
  covType           String   @map("cov_type") // 普通类型，all、agg
  // 代码覆盖率
  branchesTotal     Int      @map("branches_total")
  branchesCovered   Int      @map("branches_covered")
  functionsTotal    Int      @map("functions_total")
  functionsCovered  Int      @map("functions_covered")
  linesTotal        Int      @map("lines_total")
  linesCovered      Int      @map("lines_covered")
  statementsTotal   Int      @map("statements_total")
  statementsCovered Int      @map("statements_covered")
  newlinesTotal     Int      @map("newlines_total")
  newlinesCovered   Int      @map("newlines_covered")
  // 代码覆盖率详情
  hit               String
  // 通用
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt         DateTime @default(now()) @map("updated_at") @db.Timestamp(3)

  @@map("coverage")
}

model CoverageMap {
  id        String @id @default(cuid())
  projectID String @map("project_id")
  sha       String @map("sha")
  path      String
  map       String

  @@map("coverage_map")
}

model Project {
  id                String   @id
  name              String
  pathWithNamespace String   @map("path_with_namespace")
  description       String
  bu                String
  tags              Json
  members           Json
  coverage          String
  language          String
  defaultBranch     String   @map("default_branch")
  instrumentCwd     String   @map("instrument_cwd")
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("project")
}

model Codechange {
  id            String   @id @default(cuid())
  projectID     String   @map("project_id")
  compareTarget String   @map("compare_target")
  sha           String   @map("sha")
  path          String
  additions     Int[]
  deletions     Int[]
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("codechange")
}

model Distributedlock {
  lockName       String    @id
  isLocked       Boolean   @default(false)
  lockTimestamp  DateTime?
  lockExpiration DateTime?

  @@map("distributedlock")
}

model CoverageLog {
  id        Int      @id @default(autoincrement())
  projectID String   @map("project_id")
  sha       String   @map("sha")
  reportID  String   @map("report_id") // 未来聚合的一句，区分case
  size      Int
  coverage  String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  tags      Json?
  // 读取参数，没有才从req里取
  ip        String?
  userAgent String?  @map("user_agent")
  // secondaryReportID String @map("secondary_report_id")

  @@map("coverage_log")
}
