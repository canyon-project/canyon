datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

model User {
  id           Int      @id
  username     String
  password     String
  nickname     String
  avatar       String
  refreshToken String   @map("refresh_token")
  accessToken  String   @map("access_token")
  email        String
  favor        String
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("user")
}

model Git {
  id                   String   @id @default(cuid())
  userID               String
  provider             String
  providerAccountId    String
  providerRefreshToken String
  providerAccessToken  String
  providerScope        String
  loggedIn             DateTime @default(now()) @db.Timestamp(3)
}

model GitProvider {
  id           String  @id
  url          String
  clientID     String
  clientSecret String
  type         String
  name         String
  disabled     Boolean
}

model Coverage {
  id            String   @id @default(cuid())
  key           String // 防止重复插入
  sha           String   @map("sha")
  branch        String
  compareTarget String   @map("compare_target")
  provider      String
  projectID     String   @map("project_id")
  instrumentCwd String   @map("instrument_cwd")
  reporter      String
  reportID      String   @map("report_id") // 未来聚合的一句，区分case
  covType       String   @map("cov_type") // 普通类型，默认normal
  relationID    Json     @map("relation_id") // 关联ID，八位，{'0':'xxx','1':'xxx}
  summary       Json
  tag           Json // 存点额外的信息
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt     DateTime @default(now()) @map("updated_at") @db.Timestamp(3)

  @@map("coverage")
}

model CoverageData {
  id             String   @id @default(cuid())
  compresseddata String
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("coveragedata")
}

model Project {
  id                String   @id
  name              String
  pathWithNamespace String   @map("path_with_namespace")
  description       String
  bu                String
  tags              Json
  members           Json
  coverage          String
  language          String
  defaultBranch     String   @map("default_branch")
  instrumentCwd     String   @map("instrument_cwd")
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("project")
}

model Codechange {
  id        String @id @default(cuid())
  projectID String @map("project_id")

  compareTarget String @map("compare_target")

  sha String @map("sha")

  path String

  additions Int[]

  deletions Int[]

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("codechange")
}

model Filepath {
  id        String @id @default(cuid())
  projectID String @map("project_id")
  sha       String @map("sha")
  path      String

  @@map("filepath")
}

model Distributedlock {
  lockName       String    @id
  isLocked       Boolean   @default(false)
  lockTimestamp  DateTime?
  lockExpiration DateTime?

  @@map("distributedlock")
}
