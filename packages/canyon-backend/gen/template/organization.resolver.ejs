import { Args, ID, Int, Mutation, Query, Resolver } from '@nestjs/graphql';
import { PaginationArgs, SorterArgs } from '../types/input-types.args';
import { <%= dname %>Model } from './<%= xname %>.model';
import { <%= dname %>Service } from './<%= xname %>.service';

@Resolver(() => 'Project')
export class <%= dname %>Resolver {
  constructor(private readonly <%= xname %>Service: <%= dname %>Service) {}
  @Query(() => <%= dname %>Model, {
    description: '获取所有组织列表',
  })
  get<%= dname %>s() // @Args('keyword', { type: () => String }) keyword: string,
  // @Args('bu', { type: () => [String] }) bu: string[],
  // @Args() paginationArgs: PaginationArgs,
  // @Args() sorterArgs: SorterArgs,
  : Promise<<%= dname %>Model> {
    return this.<%= xname %>Service.get<%= dname %>s();
  }
}
