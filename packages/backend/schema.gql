# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DiffFileLines {
  path: String!
  added: [Float!]!
  removed: [Float!]!
}

type CodeDiffChangedLinesOutput {
  files: [DiffFileLines!]!
}

type CodeFileContent {
  content: String
}

type Scope {
  buildTarget: String!
  includes: [String!]!
  excludes: [String!]!
}

type Repo {
  id: String!
  pathWithNamespace: String!
  description: String!
  bu: String!
  config: String!
  scopes: [Scope!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type RepoList {
  data: [JSON!]!
  keyword: String
}

type RepoCommits {
  repoID: String!
  commits: [JSON!]!
}

type RepoPulls {
  repoID: String!
  pulls: [JSON!]!
}

type RepoCommitDetail {
  repoID: String!
  sha: String!
  commit: String
}

type RepoMutationResult {
  ok: Boolean!
  id: String!
}

type RepoUpdateResult {
  ok: Boolean!
  id: String!
}

"""Arbitrary JSON value"""
scalar JSON

type Query {
  coverageOverview(provider: String!, repoID: String!, sha: String!, buildProvider: String, buildID: String, reportProvider: String, reportID: String, filePath: String): JSON!
  repo(id: String!): Repo!
  repos(keyword: String, bu: [String!]): RepoList!
  repoCommits(repoID: String!): RepoCommits!
  repoPulls(repoID: String!): RepoPulls!
  repoCommitBySHA(repoID: String!, sha: String!): RepoCommitDetail!
  codeFileContent(repoID: String!, filepath: String!, sha: String, pullNumber: String, provider: String): CodeFileContent!
  codePullRequest(projectID: String!, pullRequestID: String!): String!
  codePullRequestChanges(projectID: String!, pullRequestID: String!): String!
  codeProjectByPath(path: String!): String!
  codeDiffChangedLines(input: CodeDiffChangedLinesInput!): CodeDiffChangedLinesOutput!
}

input CodeDiffChangedLinesInput {
  repoID: String!
  provider: String
  subject: String!
  subjectID: String!
  compareTarget: String
  filepath: String
}

type Mutation {
  postRepoById(id: String!): RepoMutationResult!
  updateRepo(id: String!, bu: String, description: String, config: String): RepoUpdateResult!
}