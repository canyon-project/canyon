datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
  output        = "../generated/client"
}

model User {
  id        String   @id
  email     String
  username  String
  password  String
  nickname  String
  avatar    String
  favor     String
  settings  Json // 主题、语言、默认显示覆盖率维度 defaultCoverageDimension
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("canyonjs_user")
}

model Project {
  id                String @id
  pathWithNamespace String @map("path_with_namespace")
  description       String
  bu                String
  tags              Json
  members           Json
  scopes            Json

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(3)

  @@map("canyonjs_project")
}

model Coverage {
  id             String   @id @default(cuid())
  instrumentCwd  String   @map("instrument_cwd")
  sha            String   @map("sha")
  branch         String
  compareTarget  String   @map("compare_target")
  provider       String
  buildProvider  String   @map("build_provider") // 通过侦测CI环境变量来判断
  buildID        String   @map("build_id")
  repoID         String   @map("repo_id")
  reporter       String
  // 新加的上报提供商，flytest、mpaas(auto) 、人(person) 人就是 (manual)
  reportProvider String   @map("report_provider")
  reportID       String   @map("report_id") // 未来聚合的一句，区分case 是个ID
  // covType           CovType  @map("cov_type") // 普通类型，all、agg
  scopeID        String   @map("scope_id") // 范围ID，来自于project的scope中
  // 代码覆盖率
  // branchesTotal     Int      @map("branches_total")
  // branchesCovered   Int      @map("branches_covered")
  // functionsTotal    Int      @map("functions_total")
  // functionsCovered  Int      @map("functions_covered")
  // linesTotal        Int      @map("lines_total")
  // linesCovered      Int      @map("lines_covered")
  // statementsTotal   Int      @map("statements_total")
  // statementsCovered Int      @map("statements_covered")
  // newlinesTotal     Int      @map("newlines_total")
  // newlinesCovered   Int      @map("newlines_covered")
  // summary           Bytes
  // // 代码覆盖率详情
  // hit               Bytes
  // 通用
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt      DateTime @default(now()) @map("updated_at") @db.Timestamp(3)

  @@map("canyonjs_coverage")
}

model CoverageMapRelation {
  id             String @id @default(cuid()) // coverageID + a_path
  absolutePath   String @map("absolute_path")
  relativePath   String @map("relative_path")
  hashID         String @map("hash_id") // hashID
  coverageID     String @map("coverage_id") // coverageID
  inputSourceMap String @map("input_source_map") // 输入的sourceMap

  @@map("canyonjs_coverage_map_relation")
}

model Diff {
  id            String   @id @default(cuid())
  provider      String
  repoID        String   @map("repo_id")
  compareTarget String   @map("compare_target")
  sha           String   @map("sha")
  path          String
  additions     Int[]
  deletions     Int[]
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamp(3)

  @@map("canyonjs_diff")
}

model Config {
  id        String   @id @default(cuid())
  key       String
  value     String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(3)

  @@map("canyonjs_config")
}

model GitProvider {
  id           String  @id
  url          String
  type         String
  name         String
  disabled     Boolean
  privateToken String  @map("private_token")

  @@map("git_provider")
}
