window["packages/canyon-platform/src/components/app/ProjectRecordDetailDrawer.tsx"] = {"content":"import { useQuery } from \"@apollo/client\";\nimport dayjs from \"dayjs\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport { GetProjectRecordDetailByShaDocument } from \"../../helpers/backend/gen/graphql.ts\";\nconst { Text } = Typography;\nimport { useRequest } from \"ahooks\";\nimport axios from \"axios\";\nconsole.log(useRequest, axios);\nconst ProjectRecordDetailDrawer = ({ open, onClose, sha }: any) => {\n  const pam = useParams();\n  const { data, loading } = useQuery(GetProjectRecordDetailByShaDocument, {\n    variables: {\n      projectID: pam.id as string,\n      sha: sha,\n    },\n  });\n\n  const { t } = useTranslation();\n  // const pam = useParams();\n  const columns = [\n    {\n      title: t(\"projects.report_id\"),\n      dataIndex: \"reportID\",\n      render(_: any): JSX.Element {\n        // 标识位（勿动）\n        return <div className={\"text-ellipsis w-[240px]\"}>{_}</div>;\n      },\n    },\n    {\n      title: t(\"projects.statements\"),\n      dataIndex: \"statements\",\n      render(_: any): JSX.Element {\n        return <span>{_}%</span>;\n      },\n    },\n    {\n      title: t(\"projects.newlines\"),\n      dataIndex: \"newlines\",\n      render(_: any): JSX.Element {\n        return <span>{_}%</span>;\n      },\n    },\n    {\n      title: t(\"projects.reporter\"),\n      dataIndex: \"reporterUsername\",\n      render(_: any, t: any): any {\n        return (\n          <div>\n            <Avatar src={t.reporterAvatar} />\n            <Text style={{ marginLeft: \"10px\" }}>{t.reporterUsername}</Text>\n          </div>\n        );\n      },\n    },\n    {\n      title: t(\"projects.report_time\"),\n      dataIndex: \"lastReportTime\",\n      render(_: any) {\n        return dayjs(_).format(\"MM-DD HH:mm\");\n      },\n    },\n    {\n      title: t(\"common.option\"),\n      render(_: any) {\n        return (\n          <div>\n            <Link\n              to={{\n                pathname: `/projects/${pam.id}/commits/${_.sha}`,\n                search: `?report_id=${encodeURIComponent(_.reportID)}`,\n              }}\n            >\n              {t(\"common.detail\")}\n            </Link>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Drawer\n        title={t(\"projects.reported_details\") + \"-\" + sha}\n        placement=\"right\"\n        width={\"85%\"}\n        onClose={onClose}\n        open={open}\n      >\n        <Table\n          loading={loading}\n          size={\"small\"}\n          rowKey={\"id\"}\n          columns={columns}\n          dataSource={data?.getProjectRecordDetailBySha || []}\n        />\n      </Drawer>\n    </>\n  );\n};\n\nexport default ProjectRecordDetailDrawer;\n","coverage":{"name":"zt"}}