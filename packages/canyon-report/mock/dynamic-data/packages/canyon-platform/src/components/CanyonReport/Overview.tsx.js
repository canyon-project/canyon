window["packages/canyon-platform/src/components/CanyonReport/Overview.tsx"] = {"content":"import { CopyOutlined, ShareAltOutlined } from \"@ant-design/icons\";\n// @ts-ignore\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { getCOlor } from \"../../helpers/utils/common.ts\";\nimport { capitalizeFirstLetter } from \"./helper.tsx\";\nconst obj = {\n  statements: 0,\n  branches: 1,\n  functions: 2,\n  lines: 3,\n  newlines: 4,\n};\nconst { Text } = Typography;\nconst CanyonReportOverview = ({\n  activatedPath,\n  pathWithNamespace,\n  onSelect,\n  summaryTreeItem,\n}) => {\n  const [sprm] = useSearchParams();\n  const { t } = useTranslation();\n  return (\n    <div>\n      {/*<span>{JSON.stringify(summaryTreeItem.summary)}</span>*/}\n      <div className={\"mb-2\"} style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>\n        <a\n          className={\"cursor-pointer\"}\n          onClick={() => {\n            onSelect({ path: \"\" });\n          }}\n        >\n          {pathWithNamespace}\n        </a>\n        {/*<span> / </span>*/}\n        {activatedPath?.split(\"/\").map((i, index, arr) => {\n          return (\n            <>\n              {activatedPath !== \"\" ? <span> / </span> : null}\n              <a\n                className={\"cursor-pointer\"}\n                onClick={() => {\n                  const newpath = arr\n                    .filter((i, index3) => index3 < index + 1)\n                    .reduce((c, p, index) => {\n                      return c + (index === 0 ? \"\" : \"/\") + p;\n                    }, \"\");\n                  onSelect({ path: newpath });\n                }}\n              >\n                {i.replace(\"~\", pathWithNamespace)}\n              </a>\n            </>\n          );\n        })}\n        <Divider type={\"vertical\"} className={\"ml-3 mr-3\"} />\n        <CopyToClipboard\n          text={activatedPath || \"null\"}\n          onCopy={() => {\n            message.success(\"复制路径成功\");\n          }}\n        >\n          <a className={\"cursor-pointer mr-2\"}>\n            <CopyOutlined style={{ fontSize: \"14px\", fontWeight: \"bold\" }} />\n          </a>\n        </CopyToClipboard>\n\n        <CopyToClipboard\n          text={location.href}\n          onCopy={() => {\n            message.success(\"复制分享链接成功\");\n          }}\n        >\n          <a className={\"cursor-pointer\"}>\n            <ShareAltOutlined\n              style={{ fontSize: \"14px\", fontWeight: \"bold\" }}\n            />\n          </a>\n        </CopyToClipboard>\n      </div>\n\n      <div className={\"flex gap-2 mb-3\"}>\n        {Object.entries(summaryTreeItem.summary)\n          .sort((a, b) => {\n            return obj[a[0]] - obj[b[0]];\n          })\n          .map(([key, value]) => {\n            return (\n              <div className={\"flex gap-1 items-center\"}>\n                <span style={{ fontWeight: \"600\", fontSize: \"14px\" }}>\n                  {value.pct}%\n                </span>\n                <Text style={{ fontSize: \"14px\" }} type={\"secondary\"}>\n                  {t(\"projects.\" + key)}:\n                </Text>\n                <Tag bordered={false}>\n                  {value.covered}/{value.total}\n                </Tag>\n              </div>\n            );\n          })}\n      </div>\n      <div\n        style={{\n          backgroundColor: getCOlor(summaryTreeItem.summary.statements.pct),\n        }}\n        className={\"w-full h-[10px] mb-3\"}\n      ></div>\n    </div>\n  );\n};\n\nexport default CanyonReportOverview;\n","coverage":{"name":"zt"}}