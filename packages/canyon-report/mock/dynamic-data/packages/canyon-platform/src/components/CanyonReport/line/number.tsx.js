window["packages/canyon-platform/src/components/CanyonReport/line/number.tsx"] = {"content":"import { getViewLineHeight } from \"../../../helpers/utils/getViewLineHeight.tsx\";\n\nconst LineNumber = ({ count, theme }) => {\n  const viewLineHeight = getViewLineHeight();\n  const style: any = {\n    color: theme === \"light\" ? \"#0074D9\" : \"#0074D9\",\n    textAlign: \"right\",\n    padding: \"0 5px 0 20px\",\n  };\n  setTimeout(() => {\n    try {\n      document\n        .getElementById(`${window.location.hash.replace(\"#\", \"\")}`)\n        .scrollIntoView();\n      window.scrollBy(0, -160); // 向上滚动160px\n    } catch (e) {\n      // console.error(e);\n    }\n  }, 0);\n\n  const activeLine = Number(window.location.hash.replace(\"#L\", \"\")) - 1;\n  return (\n    <div style={style}>\n      {[...Array(count)].map((i, index) => {\n        return (\n          <a\n            id={`L${index + 1}`}\n            href={`#L${index + 1}`}\n            className={\"cursor-pointer block\"}\n            style={{\n              height: `${viewLineHeight}px`,\n              lineHeight: `${viewLineHeight}px`,\n              color: index === activeLine ? \"red\" : \"unset\",\n              textDecoration: index === activeLine ? \"underline\" : \"unset\",\n            }}\n            key={index}\n          >\n            {index + 1}\n          </a>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default LineNumber;\n","coverage":{"name":"zt"}}