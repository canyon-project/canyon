window["packages/canyon-platform/src/components/CanyonReport/CoverageDetail.tsx"] = {"content":"import { coreFn } from \"./helper.tsx\";\nimport LineCoverage from \"./line/coverage.tsx\";\nimport LineNew from \"./line/new.tsx\";\nimport LineNumber from \"./line/number.tsx\";\nimport ShikiDetail from \"./ShikiDetail.tsx\";\n\nconst CanyonReportCoverageDetail = ({ data, theme }: any) => {\n  const code = data.sourcecode;\n  const { lines } = coreFn(data.coverage, code);\n  return (\n    <>\n      <div\n        className={\"canyon-report\"}\n        style={{\n          display: \"flex\",\n          fontSize: \"12px\",\n          lineHeight: \"14px\",\n          // backgroundColor: theme === 'dark' ? '#1a1b26' : 'white',\n        }}\n      >\n        <LineNumber theme={theme} count={code.split(\"\\n\").length} />\n        <LineNew\n          count={code.split(\"\\n\").length}\n          news={data?.newlines || []}\n        ></LineNew>\n        <LineCoverage\n          theme={theme}\n          covers={lines.map((i) => {\n            if (i.executionNumber > 0) {\n              return {\n                covered: \"yes\",\n                hits: i.executionNumber,\n              };\n            } else if (i.executionNumber === 0) {\n              return {\n                covered: \"no\",\n                hits: i.executionNumber,\n              };\n            } else {\n              return {\n                covered: \"neutral\",\n                hits: 0,\n              };\n            }\n          })}\n        />\n        <ShikiDetail\n          defaultValue={data?.sourcecode}\n          filecoverage={data.coverage}\n          theme={theme}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CanyonReportCoverageDetail;\n","coverage":{"name":"zt"}}