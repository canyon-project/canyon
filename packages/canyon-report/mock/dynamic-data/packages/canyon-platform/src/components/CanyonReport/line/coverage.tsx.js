window["packages/canyon-platform/src/components/CanyonReport/line/coverage.tsx"] = {"content":"// import { CSSProperties } from 'react';\n\nimport { getViewLineHeight } from \"../../../helpers/utils/getViewLineHeight.tsx\";\n\nconst LineCoverage = ({ covers, theme }) => {\n  const viewLineHeight = getViewLineHeight();\n  return (\n    <div style={{ textAlign: \"right\" }}>\n      {covers.map(({ covered, hits }, index) => {\n        if (covered === \"yes\") {\n          return (\n            <div\n              key={index}\n              style={{\n                backgroundColor:\n                  theme === \"light\" ? \"rgb(230,245,208)\" : \"#0A6640\",\n                color: theme === \"light\" ? \"rgba(0,0,0,0.5)\" : \"#eaeaea\",\n                padding: \"0 5px\",\n                height: `${viewLineHeight}px`,\n                lineHeight: `${viewLineHeight}px`,\n              }}\n            >\n              {hits}x\n            </div>\n          );\n        } else if (covered === \"no\") {\n          return (\n            <div\n              key={index}\n              style={{\n                backgroundColor: theme === \"light\" ? \"#FCE1E5\" : \"#7A5474\",\n                color: theme === \"light\" ? \"rgba(0,0,0,0.5)\" : \"#eaeaea\",\n                padding: \"0 5px\",\n                height: `${viewLineHeight}px`,\n              }}\n            ></div>\n          );\n        } else {\n          return (\n            <div\n              key={index}\n              style={{\n                backgroundColor:\n                  theme === \"light\" ? \"rgb(234,234,234)\" : \"rgb(45, 52, 54)\",\n                color: theme === \"light\" ? \"rgba(0,0,0,0.5)\" : \"#eaeaea\",\n                padding: \"0 5px\",\n                height: `${viewLineHeight}px`,\n              }}\n            ></div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default LineCoverage;\n","coverage":{"name":"zt"}}