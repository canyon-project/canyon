window["packages/canyon-platform/src/main.tsx"] = {"content":"import \"dayjs/locale/zh-cn.js\";\nimport \"./useWorker.ts\";\nimport \"./i18n.ts\";\nimport \"antd/dist/reset.css\";\nimport \"./index.css\";\n\nimport {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App.tsx\";\n\n// 创建一个error link来处理错误\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message: msg, locations, path }) => {\n      console.error(\n        `[GraphQL error]: msg: ${msg}, Location: ${locations}, Path: ${path}`,\n      );\n      message.error(`[GraphQL error]: msg: ${msg}, Path: ${path}`);\n      if (\n        msg === \"Unauthorized\" &&\n        window.location.pathname !== \"/oauth\" &&\n        window.location.pathname !== \"/login\"\n      ) {\n        localStorage.clear();\n        window.location.href = \"/login\";\n      }\n      // 在这里你可以执行自定义的操作，比如显示错误提示\n    });\n  }\n  if (networkError) {\n    console.error(`[Network error]: ${networkError}`);\n    // 在这里你可以执行自定义的操作，比如显示网络错误提示\n  }\n});\n\n// 创建一个http link来发送GraphQL请求\nconst httpLink = createHttpLink({\n  uri: \"/graphql\", // 你的GraphQL API的URL\n\n  headers: {\n    Authorization: `Bearer ` + (localStorage.getItem(\"token\") || \"\"),\n  },\n});\n\n// 创建Apollo Client实例\nconst client = new ApolloClient({\n  link: errorLink.concat(httpLink), // 将error link和http link组合起来\n  cache: new InMemoryCache(),\n});\n\nif (localStorage.getItem(\"theme\") === \"dark\") {\n  document.documentElement.classList.add(\"dark\");\n} else {\n  document.documentElement.classList.remove(\"dark\");\n}\n\nReactDOM.createRoot(document.getElementById(\"root\")!).render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n);\n","coverage":{"name":"zt"}}