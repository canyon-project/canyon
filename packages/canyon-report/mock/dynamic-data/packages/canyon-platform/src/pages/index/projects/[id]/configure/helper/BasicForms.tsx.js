window["packages/canyon-platform/src/pages/index/projects/[id]/configure/helper/BasicForms.tsx"] = {"content":"import { useMutation } from \"@apollo/client\";\nimport { useForm } from \"antd/es/form/Form\";\nimport { FC } from \"react\";\n\nimport { UpdateProjectDocument } from \"../../../../../../helpers/backend/gen/graphql.ts\";\n\nconst { TextArea } = Input;\n\nconst BasicForms: FC<{ data: any }> = ({ data }, ref) => {\n  const [updateProject] = useMutation(UpdateProjectDocument);\n  const prm: any = useParams();\n  const { t } = useTranslation();\n  const onFinish = (values: any) => {\n    updateProject({\n      variables: {\n        projectID: prm.id,\n        coverage: \"__null__\",\n        description: values.description,\n        defaultBranch: \"__null__\",\n        instrumentCwd: values.instrumentCwd,\n      },\n    }).then(() => {\n      message.success(\"成功\");\n    });\n  };\n  const [form] = useForm();\n  const onSubmit = () => {\n    form.submit();\n  };\n  useImperativeHandle(ref, () => ({\n    submit: onSubmit,\n  }));\n  // use\n  if (data) {\n    return (\n      <Form\n        form={form}\n        className={\"w-[850px]\"}\n        name=\"basic\"\n        layout={\"vertical\"}\n        initialValues={{\n          pathWithNamespace: data.pathWithNamespace,\n          description: data.description,\n          projectID: data.id,\n          tag: data.tag,\n          language: data.language,\n          instrumentCwd: data.instrumentCwd,\n        }}\n        onFinish={onFinish}\n      >\n        <div className={\"flex\"}>\n          <Form.Item<any>\n            label={t(\"new.repository\")}\n            name=\"pathWithNamespace\"\n            className={\"flex-1 mr-10\"}\n          >\n            <Input disabled />\n          </Form.Item>\n\n          <Form.Item<any>\n            className={\"flex-3\"}\n            label={t(\"projects.config.project.id\")}\n            name=\"projectID\"\n          >\n            <Input disabled />\n          </Form.Item>\n        </div>\n\n        <Form.Item<any> label={t(\"common.language\")} name=\"language\">\n          <Input disabled />\n        </Form.Item>\n\n        <Form.Item<any>\n          label={t(\"projects.config.project.desc\")}\n          name=\"description\"\n        >\n          <TextArea autoSize={{ minRows: 3, maxRows: 3 }} />\n        </Form.Item>\n      </Form>\n    );\n  } else {\n    return <div>loading</div>;\n  }\n};\n\nexport default forwardRef(BasicForms);\n","coverage":{"name":"zt"}}