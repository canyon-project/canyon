window["packages/canyon-platform/src/pages/index/settings/index.tsx"] = {"content":"import { SettingOutlined } from \"@ant-design/icons\";\nimport { TextTypography } from \"../../../components/ui\";\nimport { CanyonCardPrimary } from \"../../../components/old-ui\";\nimport copy from \"copy-to-clipboard\";\nimport { useTranslation } from \"react-i18next\";\n\nimport languages from \"../../../../languages.json\";\nimport Faa from \"./components/BindGitProvider.tsx\";\nimport { useRequest } from \"ahooks\";\nimport axios from \"axios\";\nconst TextArea = Input.TextArea;\nconst gridStyle: any = {\n  width: \"100%\",\n};\nconst Settings = () => {\n  const { t } = useTranslation();\n  const { data } = useRequest(() =>\n    axios.get(\"/api/base\").then(({ data }) => data),\n  );\n  return (\n    <>\n      <TextTypography title={t(\"menus.settings\")} icon={<SettingOutlined />} />\n      <CanyonCardPrimary>\n        <Card title={t(\"settings.preference\")} bordered={false}>\n          <Card.Grid hoverable={false} style={gridStyle}>\n            <div className={\"flex\"}>\n              <div className={\"w-1/2\"}>{t(\"common.language\")}</div>\n\n              <div className={\"w-1/2\"}>\n                <Select\n                  value={localStorage.getItem(\"language\") || \"cn\"}\n                  onChange={(value) => {\n                    localStorage.setItem(\"language\", value);\n                    window.location.reload();\n                  }}\n                  options={languages.map((item) => {\n                    return {\n                      label: item.name,\n                      value: item.code,\n                    };\n                  })}\n                  className={\"w-[100%]\"}\n                />\n              </div>\n            </div>\n          </Card.Grid>\n\n          <Card.Grid hoverable={false} style={gridStyle}>\n            <div className={\"flex\"}>\n              <div className={\"w-1/2\"}>{t(\"common.theme\")}</div>\n\n              <div className={\"w-1/2\"}>\n                <Select\n                  value={localStorage.getItem(\"theme\") || \"light\"}\n                  onChange={(value) => {\n                    localStorage.setItem(\"theme\", value);\n                    window.location.reload();\n                  }}\n                  options={[\n                    {\n                      label: t(\"common.light\"),\n                      value: \"light\",\n                    },\n                    {\n                      label: t(\"common.dark\"),\n                      value: \"dark\",\n                    },\n                  ]}\n                  className={\"w-[100%]\"}\n                />\n              </div>\n            </div>\n          </Card.Grid>\n        </Card>\n      </CanyonCardPrimary>\n      <div className={\"h-5\"}></div>\n      <CanyonCardPrimary>\n        <Card title={t(\"settings.user_auth_tokens\")} bordered={false}>\n          <TextArea\n            onClick={() => {\n              copy(localStorage.getItem(\"token\") || \"\");\n              message.success(\"Copied to clipboard!\");\n            }}\n            value={localStorage.getItem(\"token\") || \"\"}\n            readOnly\n          />\n        </Card>\n      </CanyonCardPrimary>\n      <div className={\"h-5\"}></div>\n      <CanyonCardPrimary>\n        <Card title={\"Canyon服务接口地址\"} bordered={false}>\n          <Input\n            onClick={() => {\n              copy(data?.CANYON_SERVER || \"\");\n              message.success(\"Copied to clipboard!\");\n            }}\n            value={data?.CANYON_SERVER || \"\"}\n            readOnly\n          />\n        </Card>\n      </CanyonCardPrimary>\n      <div className={\"h-5\"}></div>\n      {localStorage.getItem(\"debug\") === \"true\" && <Faa />}\n    </>\n  );\n};\n\nexport default Settings;\n","coverage":{"name":"zt"}}