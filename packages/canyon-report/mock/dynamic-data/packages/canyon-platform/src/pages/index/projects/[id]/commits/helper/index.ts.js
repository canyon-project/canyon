window["packages/canyon-platform/src/pages/index/projects/[id]/commits/helper/index.ts"] = {"content":"// import { data } from 'autoprefixer';\nimport axios from \"axios\";\n\nimport { getDecode } from \"../../../../../../helpers/utils/common.ts\";\n\ninterface HandleSelectFile {\n  projectID: string;\n  sha: string;\n  filepath: string;\n  reportID: string;\n  mode: string;\n}\nexport function handleSelectFile({\n  projectID,\n  sha,\n  filepath,\n  reportID,\n}: HandleSelectFile) {\n  // coverage/map\n  // codechange\n  // sourcecode\n\n  const fileContentRequest = axios\n    .get(`/api/sourcecode`, {\n      params: {\n        projectID: projectID,\n        sha: sha,\n        filepath: filepath,\n      },\n    })\n    .then(({ data }) => data);\n  const fileCoverageRequest = axios\n    .get(`/api/coverage/map`, {\n      params: {\n        projectID,\n        reportID: reportID,\n        sha: sha,\n        filepath: filepath,\n      },\n    })\n    .then(({ data }) => data[filepath]);\n\n  const fileCodeChangeRequest = axios\n    .get(`/api/codechange`, {\n      // operationName: 'GetCodeChange',\n      params: {\n        sha: sha,\n        filepath: filepath,\n      },\n    })\n    .then(({ data }) => data);\n  // commitSha, reportID, filepath\n  return Promise.all([\n    fileContentRequest,\n    fileCoverageRequest,\n    fileCodeChangeRequest,\n  ]).then(([fileContent, fileCoverage, fileCodeChange]) => {\n    return {\n      fileContent: getDecode(fileContent.content),\n      fileCoverage: fileCoverage,\n      fileCodeChange: fileCodeChange.additions || [],\n    };\n  });\n}\n\nexport const getCoverageSummaryMapService = ({ projectID, sha, reportID }) =>\n  axios({\n    url: \"/api/coverage/summary/map\",\n    method: \"GET\",\n    params: {\n      reportID: reportID || \"\",\n      sha: sha || \"\",\n      projectID: projectID || \"\",\n    },\n  })\n    .then(({ data }) => data)\n    .then((r) =>\n      r.map((i) => ({\n        ...i,\n        path: i.path.replace(\"~/\", \"\"),\n      })),\n    )\n    .then((r) => {\n      return r;\n    });\n","coverage":{"name":"zt"}}