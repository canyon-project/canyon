window["packages/canyon-platform/src/pages/index/projects/[id]/commits/[sha].tsx"] = {"content":"import { useQuery } from \"@apollo/client\";\nimport { useRequest } from \"ahooks\";\nimport {\n  useLocation,\n  useNavigate,\n  useParams,\n  useSearchParams,\n} from \"react-router-dom\";\n\nimport CanyonReport from \"../../../../../components/CanyonReport\";\nimport { GetProjectByIdDocument } from \"../../../../../helpers/backend/gen/graphql.ts\";\nimport { getCoverageSummaryMapService, handleSelectFile } from \"./helper\";\nconst { useToken } = theme;\n\nconst Sha = () => {\n  const prm = useParams();\n  const nav = useNavigate();\n  const [sprm] = useSearchParams();\n  // 在组件中\n  const location = useLocation();\n  const currentPathname = location.pathname;\n  const { data: getProjectByIdDocumentData } = useQuery(\n    GetProjectByIdDocument,\n    {\n      variables: {\n        projectID: prm[\"id\"] as string,\n      },\n    },\n  );\n  const pathWithNamespace =\n    getProjectByIdDocumentData?.getProjectByID.pathWithNamespace.split(\"/\")[1];\n  const { token } = useToken();\n\n  const { data: coverageSummaryMapData, loading } = useRequest(\n    () =>\n      getCoverageSummaryMapService({\n        projectID: prm.id as string,\n        reportID: sprm.get(\"report_id\"),\n        sha: prm.sha,\n      }),\n    {\n      onSuccess() {},\n    },\n  );\n\n  const [activatedPath, setActivatedPath] = useState(sprm.get(\"path\") || \"\");\n  const [mainData, setMainData] = useState<any>(false);\n\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (sprm.get(\"report_id\")) {\n      params.append(\"report_id\", sprm.get(\"report_id\") || \"\");\n    }\n    if (sprm.get(\"mode\")) {\n      params.append(\"mode\", sprm.get(\"mode\") || \"\");\n    }\n    params.append(\"path\", activatedPath);\n\n    // 将参数拼接到路径中\n    const pathWithParams = `${currentPathname}?${params.toString()}${location.hash}`;\n\n    nav(pathWithParams);\n\n    if (activatedPath.includes(\".\")) {\n      handleSelectFile({\n        filepath: activatedPath,\n        reportID: sprm.get(\"report_id\") || \"\",\n        sha: prm.sha || \"\",\n        projectID: prm.id || \"\",\n        mode: sprm.get(\"mode\") || \"\",\n      }).then((r) => {\n        if (r.fileCoverage) {\n          // console.log(r)\n          setMainData(r);\n        } else {\n          setMainData(false);\n        }\n      });\n    } else {\n      // console.log('设么也不做');\n      setMainData(false);\n    }\n  }, [activatedPath]);\n\n  return (\n    <>\n      <div\n        className=\"p-2 rounded-md bg-white dark:bg-[#151718] flex \"\n        style={{\n          boxShadow: `${token.boxShadowTertiary}`,\n          display: \"none\",\n        }}\n      >\n        <div>\n          <div>Ant Design Title 1</div>\n          <div>\n            sign, a design language for background applications, is refined by\n          </div>\n        </div>\n        <Divider type={\"vertical\"} style={{ height: \"60px\" }} />\n        <div>\n          <div>Ant Design Title 1</div>\n          <div>\n            sign, a design language for background applications, is refined by\n          </div>\n        </div>\n        <Divider type={\"vertical\"} style={{ height: \"60px\" }} />\n        <div>\n          <div>Ant Design Title 1</div>\n          <div>\n            sign, a design language for background applications, is refined by\n          </div>\n        </div>\n      </div>\n      <div className={\"h-[10px]\"}></div>\n      <div\n        className=\"p-2 rounded-md bg-white dark:bg-[#151718]\"\n        style={{\n          // border: `1px solid ${token.colorBorder}`,\n          boxShadow: `${token.boxShadowTertiary}`,\n        }}\n      >\n        <>\n          {getProjectByIdDocumentData?.getProjectByID.language ===\n            \"JavaScript\" && (\n            <CanyonReport\n              theme={localStorage.getItem(\"theme\") || \"light\"}\n              mainData={mainData}\n              pathWithNamespace={pathWithNamespace}\n              activatedPath={activatedPath}\n              coverageSummaryMapData={coverageSummaryMapData || []}\n              loading={loading}\n              onSelect={(v: any) => {\n                setActivatedPath(v.path);\n              }}\n            />\n          )}\n        </>\n      </div>\n    </>\n  );\n};\n\nexport default Sha;\n","coverage":{"name":"zt"}}