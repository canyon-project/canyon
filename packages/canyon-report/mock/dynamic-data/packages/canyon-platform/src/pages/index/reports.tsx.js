window["packages/canyon-platform/src/pages/index/reports.tsx"] = {"content":"import ReactECharts from \"echarts-for-react\";\nimport { useRequest } from \"ahooks\";\nimport axios from \"axios\";\nimport { Select, Space, Table } from \"antd\";\nimport { useQuery } from \"@apollo/client\";\nimport { GetProjectsBuOptionsDocument } from \"../../helpers/backend/gen/graphql.ts\";\nimport { CanyonCardPrimary } from \"../../components/old-ui\";\nimport dayjs from \"dayjs\";\n\nconst { RangePicker } = DatePicker;\nconst optionsWithDisabled = [\n  { label: \"图表\", value: \"图表\" },\n  { label: \"表格\", value: \"表格\" },\n  // { label: 'Orange', value: 'Orange', disabled: true },\n];\n\nconst Reports = () => {\n  const [showType, setShowType] = useState(\"图表\");\n  const [bu, setBu] = useState(\"机票\");\n  const [range, setRange] = useState([dayjs().subtract(30, \"days\"), dayjs()]);\n\n  const { data: getProjectsBuOptionsDocumentData } = useQuery(\n    GetProjectsBuOptionsDocument,\n  );\n  const { data: data = [], loading } = useRequest(\n    () =>\n      axios\n        .get(`/api/coverage/reports`, {\n          params: {\n            bu,\n            start: range[0].format(\"YYYY-MM-DD\"),\n            end: range[1].format(\"YYYY-MM-DD\"),\n          },\n        })\n        .then((res) => res.data),\n    {\n      refreshDeps: [bu, range],\n    },\n  );\n\n  const columns = [\n    {\n      title: \"项目\",\n      dataIndex: \"pathWithNamespace\",\n      key: \"pathWithNamespace\",\n    },\n    {\n      title: \"描述\",\n      dataIndex: \"description\",\n      key: \"description\",\n      ellipsis: true,\n      width: \"40%\",\n    },\n    {\n      title: \"UI自动化\",\n      dataIndex: \"auto\",\n      key: \"auto\",\n      sorter: (a, b) => a.auto - b.auto,\n      defaultSortOrder: \"descend\",\n    },\n    {\n      title: \"单元测试\",\n      dataIndex: \"ut\",\n      key: \"ut\",\n      sorter: (a, b) => a.ut - b.ut,\n    },\n  ];\n\n  const opppppp = useMemo(() => {\n    const option = {\n      // title: {\n      //   text: '各仓库覆盖率数据统计'\n      // },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"shadow\",\n        },\n      },\n      legend: {},\n      grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        containLabel: true,\n      },\n      xAxis: {\n        type: \"value\",\n        boundaryGap: [0, 0.01],\n      },\n      yAxis: {\n        type: \"category\",\n        data: [\"Brazil\", \"Indonesia\", \"USA\", \"India\", \"China\", \"World\"],\n      },\n      series: [\n        {\n          name: \"UI自动化\",\n          type: \"bar\",\n          data: [],\n        },\n        {\n          name: \"单元测试\",\n          type: \"bar\",\n          data: [],\n        },\n      ],\n    };\n    option.yAxis.data = data.map(\n      (item) => item.pathWithNamespace.split(\"/\")[1],\n    );\n    option.series = [\n      {\n        name: \"UI自动化\",\n        type: \"bar\",\n        data: data.map((item) => item.auto),\n        label: {\n          show: true,\n          position: \"right\",\n        },\n      },\n      {\n        name: \"单元测试\",\n        type: \"bar\",\n        data: data.map((item) => item.ut),\n        label: {\n          show: true,\n          position: \"right\",\n        },\n      },\n    ];\n    return option;\n  }, [data]);\n\n  // 输出从\n  return (\n    <CanyonCardPrimary>\n      <div className={\"bg-white dark:bg-[#0F0D28] p-5\"}>\n        <h3 className={\"mb-5\"}>各仓库覆盖率数据统计</h3>\n\n        <Space className={\"mb-5\"}>\n          <Radio.Group\n            options={optionsWithDisabled}\n            onChange={(v) => {\n              setShowType(v.target.value);\n            }}\n            value={showType}\n            optionType=\"button\"\n            buttonStyle=\"solid\"\n          />\n          <Select\n            className={\"w-[200px]\"}\n            value={bu}\n            options={\n              getProjectsBuOptionsDocumentData?.getProjectsBuOptions.map(\n                ({ bu }) => ({\n                  label: `${bu}`,\n                  value: bu,\n                }),\n              ) || []\n            }\n            onChange={(v) => {\n              setBu(v);\n            }}\n          />\n\n          <RangePicker\n            value={range}\n            onChange={(v) => {\n              setRange(v);\n            }}\n            presets={[\n              {\n                label: \"最近30天\",\n                // text: '最近7天',\n                value: [dayjs().subtract(30, \"days\"), dayjs()],\n              },\n              {\n                label: \"6月份\",\n                value: [dayjs(\"2024-06-01\"), dayjs(\"2024-06-30\")],\n              },\n              {\n                label: \"5月份\",\n                value: [dayjs(\"2024-05-01\"), dayjs(\"2024-05-31\")],\n              },\n              {\n                label: \"4月份\",\n                value: [dayjs(\"2024-04-01\"), dayjs(\"2024-04-30\")],\n              },\n            ]}\n          />\n        </Space>\n\n        <Spin spinning={loading}>\n          {showType === \"图表\" ? (\n            data.length > 0 ? (\n              <ReactECharts\n                theme={\n                  localStorage.getItem(\"theme\") === \"dark\"\n                    ? \"dark\"\n                    : {\n                        color: [\"#287DFA\", \"#FFB400\"],\n                      }\n                }\n                option={opppppp}\n                style={{\n                  height: `${data.length * 50 + 100}px`,\n                }}\n              />\n            ) : (\n              <div>暂无数据</div>\n            )\n          ) : (\n            <Table\n              dataSource={data}\n              columns={columns}\n              pagination={false}\n              size={\"small\"}\n            />\n          )}\n        </Spin>\n      </div>\n    </CanyonCardPrimary>\n  );\n};\n\nexport default Reports;\n","coverage":{"name":"zt"}}